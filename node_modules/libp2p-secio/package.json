{
  "_from": "libp2p-secio",
  "_id": "libp2p-secio@0.10.0",
  "_inBundle": false,
  "_integrity": "sha512-/0nirr4UBdQBbETBliGYD6mLzKl+ZUX+2Kzmpk98Pdjdam5W2IhLF8zSeeK6Z4d/gJOaLdf2H8C6wLrwOSil8A==",
  "_location": "/libp2p-secio",
  "_phantomChildren": {
    "asn1.js": "5.0.1",
    "async": "2.6.1",
    "browserify-aes": "1.2.0",
    "bs58": "4.0.1",
    "keypair": "1.0.1",
    "libp2p-crypto-secp256k1": "0.2.2",
    "lodash": "4.17.10",
    "multihashes": "0.4.14",
    "multihashing-async": "0.4.8",
    "node-forge": "0.7.6",
    "pem-jwk": "1.5.1",
    "protons": "1.0.1",
    "rsa-pem-to-jwk": "1.1.3",
    "tweetnacl": "1.0.0",
    "webcrypto-shim": "0.1.1"
  },
  "_requested": {
    "escapedName": "libp2p-secio",
    "fetchSpec": "latest",
    "name": "libp2p-secio",
    "raw": "libp2p-secio",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/libp2p-secio/-/libp2p-secio-0.10.0.tgz",
  "_shasum": "981294451025ad09b5b5730c868f09bae9c7a48d",
  "_shrinkwrap": null,
  "_spec": "libp2p-secio",
  "_where": "/home/viziosde/gitlab.com/ViziosDe/mvb-blockchain",
  "author": {
    "email": "dignifiedquire@gmail.com",
    "name": "Friedel Ziegelmayer"
  },
  "bugs": {
    "url": "https://github.com/ipfs/js-libp2p-secio/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Dmitriy Ryajov",
      "email": "dryajov@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Jacob Heun",
      "email": "jacobheun@gmail.com"
    },
    {
      "name": "Pedro Teixeira",
      "email": "i@pgte.me"
    },
    {
      "name": "Richard Littauer",
      "email": "richard.littauer@gmail.com"
    },
    {
      "name": "Victor Bjelkholm",
      "email": "victorbjelkholm@gmail.com"
    },
    {
      "name": "greenkeeperio-bot",
      "email": "support@greenkeeper.io"
    }
  ],
  "dependencies": {
    "async": "^2.6.0",
    "debug": "^3.1.0",
    "interface-connection": "~0.3.2",
    "libp2p-crypto": "~0.12.1",
    "multihashing-async": "~0.4.8",
    "peer-id": "~0.10.7",
    "peer-info": "^0.14.0",
    "protons": "^1.0.1",
    "pull-defer": "^0.2.2",
    "pull-handshake": "^1.1.4",
    "pull-length-prefixed": "^1.3.0",
    "pull-stream": "^3.6.7"
  },
  "deprecated": false,
  "description": "Secio implementation in JavaScript",
  "devDependencies": {
    "aegir": "^13.0.6",
    "benchmark": "^2.1.4",
    "chai": "^4.1.2",
    "dirty-chai": "^2.0.1",
    "gulp": "^3.9.1",
    "libp2p-websockets": "~0.11.0",
    "multistream-select": "^0.14.1",
    "pre-commit": "^1.2.2",
    "pull-goodbye": "0.0.2",
    "pull-pair": "^1.1.0"
  },
  "engines": {
    "node": ">=6.0.0",
    "npm": ">=3.0.0"
  },
  "homepage": "https://github.com/ipfs/js-libp2p-secio",
  "keywords": [
    "IPFS",
    "crypto",
    "libp2p",
    "rsa"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "libp2p-secio",
  "optionalDependencies": {},
  "pre-commit": [
    "lint",
    "test"
  ],
  "readme": "# js-libp2p-secio\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io/)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![standard-readme compliant](https://img.shields.io/badge/standard--readme-OK-green.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n[![Coverage Status](https://coveralls.io/repos/github/libp2p/js-libp2p-secio/badge.svg?branch=master)](https://coveralls.io/github/libp2p/js-libp2p-secio?branch=master)\n[![Travis CI](https://travis-ci.org/libp2p/js-libp2p-secio.svg?branch=master)](https://travis-ci.org/libp2p/js-libp2p-secio)\n[![Circle CI](https://circleci.com/gh/libp2p/js-libp2p-secio.svg?style=svg)](https://circleci.com/gh/libp2p/js-libp2p-secio)\n[![Dependency Status](https://david-dm.org/libp2p/js-libp2p-secio.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-secio)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n![](https://img.shields.io/badge/npm-%3E%3D3.0.0-orange.svg?style=flat-square)\n![](https://img.shields.io/badge/Node.js-%3E%3D6.0.0-orange.svg?style=flat-square)\n\n\n> SECIO implementation in JavaScript\n\nThis repo contains the JavaScript implementation of secio, an encryption protocol used in libp2p. This is based on this [go implementation](https://github.com/libp2p/go-libp2p-secio).\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Install\n\n```sh\nnpm install libp2p-secio\n```\n\n## Usage\n\n```js\nconst secio = require('libp2p-secio')\n```\n\n## API\n\n### `.tag`\n\nThe current `secio` tag, usable in `multistream`.\n\n### `const encryptedConnection = secio.encrypt(localPeerId, plainTextConnection [, remotePeerId] [, callback])`\n\n- `localPeerId: PeerId` - A PeerId object containing the Private, Public and Id of our node.\n- `plainTextConnection: Connection` - The insecure connection to be secured.\n- `remotePeerId: PeerId` - A PeerId object containing the Public and/or Id of the node we are doing the SECIO handshake with.\n- `callback: Function` - Optional, Called if an error happens during the initialization.\n\nReturns an encrypted [Connection object](https://github.com/libp2p/interface-connection) that is the upgraded `plainTextConnection` with now having every byte encripted.\n\nBoth plainTextConnection and encryptedConnection are at their base, PullStreams.\n\n### This module uses `pull-streams`\n\nWe expose a streaming interface based on `pull-streams`, rather then on the Node.js core streams implementation (aka Node.js streams). `pull-streams` offers us a better mechanism for error handling and flow control guarantees. If you would like to know more about why we did this, see the discussion at this [issue](https://github.com/ipfs/js-ipfs/issues/362).\n\nYou can learn more about pull-streams at:\n\n- [The history of Node.js streams, nodebp April 2014](https://www.youtube.com/watch?v=g5ewQEuXjsQ)\n- [The history of streams, 2016](http://dominictarr.com/post/145135293917/history-of-streams)\n- [pull-streams, the simple streaming primitive](http://dominictarr.com/post/149248845122/pull-streams-pull-streams-are-a-very-simple)\n- [pull-streams documentation](https://pull-stream.github.io/)\n\n#### Converting `pull-streams` to Node.js Streams\n\nIf you are a Node.js streams user, you can convert a pull-stream to a Node.js stream using the module [`pull-stream-to-stream`](https://github.com/pull-stream/pull-stream-to-stream), giving you an instance of a Node.js stream that is linked to the pull-stream. For example:\n\n```js\nconst pullToStream = require('pull-stream-to-stream')\n\nconst nodeStreamInstance = pullToStream(pullStreamInstance)\n// nodeStreamInstance is an instance of a Node.js Stream\n```\n\nTo learn more about this utility, visit https://pull-stream.github.io/#pull-stream-to-stream.\n\n## Contribute\n\nFeel free to join in. All welcome. Open an [issue](https://github.com/libp2p/js-libp2p-secio/issues)!\n\nThis repository falls under the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/contributing.md)\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ipfs/js-libp2p-secio.git"
  },
  "scripts": {
    "benchmark": "node benchmarks/send.js",
    "build": "aegir build",
    "coverage": "aegir coverage",
    "coverage-publish": "aegir coverage publish",
    "lint": "aegir lint",
    "release": "aegir release -t node browser",
    "release-major": "aegir release --type major -t node browser",
    "release-minor": "aegir release --type minor -t node browser",
    "test": "aegir test",
    "test:browser": "aegir test -t browser",
    "test:node": "aegir test -t node"
  },
  "version": "0.10.0"
}
