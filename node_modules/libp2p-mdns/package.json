{
  "_from": "libp2p-mdns",
  "_id": "libp2p-mdns@0.12.0",
  "_inBundle": false,
  "_integrity": "sha512-2K1IT8ZwnzS00Ws6MiLW89W2KAG+8NsrMez2laVZJtD9RpWBgc9+KGQ7KU1nYRyYXD/NGXNEiQ6HTkhSQvYbiQ==",
  "_location": "/libp2p-mdns",
  "_phantomChildren": {
    "asn1.js": "5.0.1",
    "async": "2.6.1",
    "browserify-aes": "1.2.0",
    "bs58": "4.0.1",
    "keypair": "1.0.1",
    "libp2p-crypto-secp256k1": "0.2.2",
    "lodash": "4.17.10",
    "multihashes": "0.4.14",
    "multihashing-async": "0.4.8",
    "node-forge": "0.7.6",
    "pem-jwk": "1.5.1",
    "protons": "1.0.1",
    "rsa-pem-to-jwk": "1.1.3",
    "tweetnacl": "1.0.0",
    "webcrypto-shim": "0.1.1"
  },
  "_requested": {
    "escapedName": "libp2p-mdns",
    "fetchSpec": "latest",
    "name": "libp2p-mdns",
    "raw": "libp2p-mdns",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/libp2p-mdns/-/libp2p-mdns-0.12.0.tgz",
  "_shasum": "0e67d7b24f3829d7f2f0d8f60f43d009a4995ba3",
  "_shrinkwrap": null,
  "_spec": "libp2p-mdns",
  "_where": "/home/viziosde/gitlab.com/ViziosDe/mvb-blockchain",
  "author": {
    "email": "daviddias@ipfs.io",
    "name": "David Dias"
  },
  "bugs": {
    "url": "https://github.com/libp2p/js-libp2p-mdns/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Nuno Nogueira",
      "email": "nunofmn@gmail.com"
    },
    {
      "name": "Richard Littauer",
      "email": "richard.littauer@gmail.com"
    },
    {
      "name": "Richard Schneider",
      "email": "makaretu@gmail.com"
    },
    {
      "name": "emersion",
      "email": "contact@emersion.fr"
    },
    {
      "name": "greenkeeperio-bot",
      "email": "support@greenkeeper.io"
    },
    {
      "name": "ᴠɪᴄᴛᴏʀ ʙᴊᴇʟᴋʜᴏʟᴍ",
      "email": "victorbjelkholm@gmail.com"
    }
  ],
  "dependencies": {
    "libp2p-tcp": "~0.12.0",
    "multiaddr": "^5.0.0",
    "multicast-dns": "^7.0.0",
    "peer-id": "~0.10.7",
    "peer-info": "~0.14.1"
  },
  "deprecated": false,
  "description": "Node.js libp2p mDNS discovery implementation for peer discovery",
  "devDependencies": {
    "aegir": "^14.0.0",
    "async": "^2.6.1",
    "chai": "^4.1.2",
    "dirty-chai": "^2.0.1",
    "pre-commit": "^1.2.2"
  },
  "homepage": "https://github.com/libp2p/js-libp2p-mdns",
  "keywords": [
    "IPFS"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "libp2p-mdns",
  "optionalDependencies": {},
  "pre-commit": [
    "lint",
    "test"
  ],
  "readme": "libp2p-mdns JavaScript implementation\n=====================================\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io/)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Coverage Status](https://coveralls.io/repos/github/libp2p/js-libp2p-mdns/badge.svg?branch=master)](https://coveralls.io/github/libp2p/js-libp2p-mdns?branch=master)\n[![Travis CI](https://travis-ci.org/libp2p/js-libp2p-mdns.svg?branch=master)](https://travis-ci.org/libp2p/js-libp2p-mdns)\n[![Circle CI](https://circleci.com/gh/libp2p/js-libp2p-mdns.svg?style=svg)](https://circleci.com/gh/libp2p/js-libp2p-mdns)\n[![Dependency Status](https://david-dm.org/libp2p/js-libp2p-mdns.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-mdns)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n\n> JavaScript libp2p MulticastDNS discovery implementation\n\n# Usage\n\n```JavaScript\nconst MDNS = require('libp2p-mdns')\n\nconst mdns = new MDNS(options)\n\nmdns.on('peer', (peerInfo) => {\n  console.log('Found a peer in the local network', peerInfo.id.toB58String())\n})\n\n// Broadcast for 20 seconds\nmdns.start(() => setTimeout(() => mdns.stop(() => {}), 20 * 1000))\n```\n\n- options\n  - `peerInfo` - PeerInfo to announce\n  - `broadcast` - (true/false) announce our presence through mDNS, default false\n  - `interval` - query interval, default 10 * 1000 (10 seconds)\n  - `serviceTag` - name of the service announce , default 'ipfs.local`\n\n# MDNS messages\n\nA query is sent to discover the IPFS nodes on the local network\n\n```\n{ type: 'query',\n  questions: [ { name: 'ipfs.local', type: 'PTR' } ]\n}\n```\n\nWhen a query is detected, each IPFS node sends an answer about itself\n\n```\n[ { name: 'ipfs.local',\n    type: 'PTR',\n    class: 'IN',\n    ttl: 120,\n    data: 'QmNPubsDWATVngE3d5WDSNe7eVrFLuk38qb9t6vdLnu2aK.ipfs.local' },\n  { name: 'QmNPubsDWATVngE3d5WDSNe7eVrFLuk38qb9t6vdLnu2aK.ipfs.local',\n    type: 'SRV',\n    class: 'IN',\n    ttl: 120,\n    data:\n     { priority: 10,\n       weight: 1,\n       port: '20002',\n       target: 'LAPTOP-G5LJ7VN9' } },\n  { name: 'QmNPubsDWATVngE3d5WDSNe7eVrFLuk38qb9t6vdLnu2aK.ipfs.local',\n    type: 'TXT',\n    class: 'IN',\n    ttl: 120,\n    data: ['QmNPubsDWATVngE3d5WDSNe7eVrFLuk38qb9t6vdLnu2aK'] },\n  { name: 'LAPTOP-G5LJ7VN9',\n    type: 'A',\n    class: 'IN',\n    ttl: 120,\n    data: '127.0.0.1' },\n  { name: 'LAPTOP-G5LJ7VN9',\n    type: 'AAAA',\n    class: 'IN',\n    ttl: 120,\n    data: '::1' } ]\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/libp2p/js-libp2p-mdns.git"
  },
  "scripts": {
    "coverage": "aegir coverage",
    "coverage-publish": "aegir coverage publish",
    "lint": "aegir lint",
    "release": "aegir release -t node --no-build",
    "release-major": "aegir release --type major -t node --no-build",
    "release-minor": "aegir release --type minor -t node --no-build",
    "test": "aegir test -t node"
  },
  "version": "0.12.0"
}
